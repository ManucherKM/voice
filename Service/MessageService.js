import { backKeyboard, botKeyboard, startKeyboard } from '../Utils/Buttons.js'
import ConvertController from '../Controller/ConvertController.js'
import WordSearchController from '../Controller/WordSearchController.js'

class MessageService {
	async start(msg, bot) {
		const chatId = msg.chat.id
		const message = '–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–±—â–µ–Ω–∏–µ'
		await bot.sendSticker(
			chatId,
			'https://chpic.su/_data/stickers/m/mikewazowski_vk/mikewazowski_vk_019.webp'
		)
		await bot.sendMessage(chatId, message, startKeyboard)
		return true
	}

	async back(msg, bot) {
		const chatId = msg.chat.id
		const message = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
		await bot.sendMessage(chatId, message, startKeyboard)
		return true
	}

	async bot(msg, bot) {
		const chatId = msg.chat.id
		const message = '–ë–æ—Ç'
		await bot.sendMessage(chatId, message, backKeyboard)
		return true
	}

	async setting(msg, bot) {
		const chatId = msg.chat.id
		const message = `–û —Ç–æ–º –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç—É—Çüëá:\n\nGitHub:\nhttps://github.com/ManucherKM/voice`
		await bot.sendMessage(chatId, message, botKeyboard)
		return true
	}

	async voice(msg, bot) {
		const messages = {
			treatment: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã ‚è≥',
			translated_text: '',
		}

		const chatId = msg.chat.id

		const { message_id } = await bot.sendMessage(chatId, messages.treatment)

		const { file_id } = msg.voice

		const audioLink = await bot.getFileLink(file_id)

		messages.translated_text = await ConvertController.getConvertText(audioLink)

		if (!!messages.translated_text) {
			const command = await WordSearchController.searchWords(
				messages.translated_text
			)
			if (!command) {
				const msg_err = '–ë–æ—Ç –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à—É –∫–æ–º–∞–Ω–¥—Éüòû\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞'
				await bot.editMessageText(msg_err, {
					chat_id: chatId,
					message_id,
				})
				return
			}

			const msg_success = `–ö–æ–º–∞–Ω–¥–∞: ${command} –ø—Ä–∏–Ω—è—Ç–∞`
			await bot.editMessageText(msg_success, {
				chat_id: chatId,
				message_id,
			})
		} else if (!messages.translated_text) {
			const msg_err = '–ë–æ—Ç –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à—É –∫–æ–º–∞–Ω–¥—Éüòû\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞'
			await bot.editMessageText(msg_err, {
				chat_id: chatId,
				message_id,
			})
		}
		return true
	}
}

export default new MessageService()
